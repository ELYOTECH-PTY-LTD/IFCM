{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/gui/Documents/Projet/IFCM/src/components/Menu.tsx\";\n\nimport React from 'react';\nimport { withRouter, useLocation } from 'react-router';\nimport { IonContent, IonIcon, IonItem, IonLabel, IonList, IonListHeader, IonMenu, IonMenuToggle, IonToggle } from '@ionic/react';\nimport { calendarOutline, hammer, moonOutline, help, informationCircleOutline, logIn, logOut, mapOutline, peopleOutline, person, personAdd } from 'ionicons/icons';\nimport { connect } from '../data/connect';\nimport { setDarkMode } from '../data/user/user.actions';\nimport './Menu.css';\nvar routes = {\n  appPages: [{\n    title: 'Schedule',\n    path: '/tabs/schedule',\n    icon: calendarOutline\n  }, {\n    title: 'Speakers',\n    path: '/tabs/speakers',\n    icon: peopleOutline\n  }, {\n    title: 'Map',\n    path: '/tabs/map',\n    icon: mapOutline\n  }, {\n    title: 'About',\n    path: '/tabs/about',\n    icon: informationCircleOutline\n  }],\n  loggedInPages: [{\n    title: 'Account',\n    path: '/account',\n    icon: person\n  }, {\n    title: 'Support',\n    path: '/support',\n    icon: help\n  }, {\n    title: 'Logout',\n    path: '/logout',\n    icon: logOut\n  }],\n  loggedOutPages: [{\n    title: 'Login',\n    path: '/login',\n    icon: logIn\n  }, {\n    title: 'Support',\n    path: '/support',\n    icon: help\n  }, {\n    title: 'Signup',\n    path: '/signup',\n    icon: personAdd\n  }]\n};\n\nvar Menu = function Menu(_ref) {\n  var darkMode = _ref.darkMode,\n      history = _ref.history,\n      isAuthenticated = _ref.isAuthenticated,\n      setDarkMode = _ref.setDarkMode,\n      menuEnabled = _ref.menuEnabled;\n  var location = useLocation();\n\n  function renderlistItems(list) {\n    var _this2 = this;\n\n    return list.filter(function (route) {\n      return !!route.path;\n    }).map(function (p) {\n      return /*#__PURE__*/React.createElement(IonMenuToggle, {\n        key: p.title,\n        \"auto-hide\": \"false\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IonItem, {\n        detail: false,\n        routerLink: p.path,\n        routerDirection: \"none\",\n        className: location.pathname.startsWith(p.path) ? 'selected' : undefined,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IonIcon, {\n        slot: \"start\",\n        icon: p.icon,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(IonLabel, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, p.title)));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(IonMenu, {\n    type: \"overlay\",\n    disabled: !menuEnabled,\n    contentId: \"main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonContent, {\n    forceOverscroll: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonList, {\n    lines: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonListHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Conference\"), renderlistItems(routes.appPages)), /*#__PURE__*/React.createElement(IonList, {\n    lines: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonListHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Account\"), isAuthenticated ? renderlistItems(routes.loggedInPages) : renderlistItems(routes.loggedOutPages), /*#__PURE__*/React.createElement(IonItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"start\",\n    icon: moonOutline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Dark Mode\"), /*#__PURE__*/React.createElement(IonToggle, {\n    checked: darkMode,\n    onClick: function onClick() {\n      return setDarkMode(!darkMode);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(IonList, {\n    lines: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonListHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Tutorial\"), /*#__PURE__*/React.createElement(IonItem, {\n    button: true,\n    onClick: function onClick() {\n      history.push('/tutorial');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"start\",\n    icon: hammer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), \"Show Tutorial\"))));\n};\n\nexport default connect({\n  mapStateToProps: function mapStateToProps(state) {\n    return {\n      darkMode: state.user.darkMode,\n      isAuthenticated: state.user.isLoggedin,\n      menuEnabled: state.data.menuEnabled\n    };\n  },\n  mapDispatchToProps: {\n    setDarkMode: setDarkMode\n  },\n  component: withRouter(Menu)\n});","map":{"version":3,"sources":["/home/gui/Documents/Projet/IFCM/src/components/Menu.tsx"],"names":["React","withRouter","useLocation","IonContent","IonIcon","IonItem","IonLabel","IonList","IonListHeader","IonMenu","IonMenuToggle","IonToggle","calendarOutline","hammer","moonOutline","help","informationCircleOutline","logIn","logOut","mapOutline","peopleOutline","person","personAdd","connect","setDarkMode","routes","appPages","title","path","icon","loggedInPages","loggedOutPages","Menu","darkMode","history","isAuthenticated","menuEnabled","location","renderlistItems","list","filter","route","map","p","pathname","startsWith","undefined","push","mapStateToProps","state","user","isLoggedin","data","mapDispatchToProps","component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { RouteComponentProps, withRouter, useLocation } from 'react-router';\n\nimport { IonContent, IonIcon, IonItem, IonLabel, IonList, IonListHeader, IonMenu, IonMenuToggle, IonToggle } from '@ionic/react';\nimport { calendarOutline, hammer, moonOutline, help, informationCircleOutline, logIn, logOut, mapOutline, peopleOutline, person, personAdd } from 'ionicons/icons';\n\nimport { connect } from '../data/connect';\nimport { setDarkMode } from '../data/user/user.actions';\n\nimport './Menu.css'\n\nconst routes = {\n  appPages: [\n    { title: 'Schedule', path: '/tabs/schedule', icon: calendarOutline },\n    { title: 'Speakers', path: '/tabs/speakers', icon: peopleOutline },\n    { title: 'Map', path: '/tabs/map', icon: mapOutline },\n    { title: 'About', path: '/tabs/about', icon: informationCircleOutline }\n  ],\n  loggedInPages: [\n    { title: 'Account', path: '/account', icon: person },\n    { title: 'Support', path: '/support', icon: help },\n    { title: 'Logout', path: '/logout', icon: logOut }\n  ],\n  loggedOutPages: [\n    { title: 'Login', path: '/login', icon: logIn },\n    { title: 'Support', path: '/support', icon: help },\n    { title: 'Signup', path: '/signup', icon: personAdd }\n  ]\n};\n\ninterface Pages {\n  title: string,\n  path: string,\n  icon: string,\n  routerDirection?: string\n}\ninterface StateProps {\n  darkMode: boolean;\n  isAuthenticated: boolean;\n  menuEnabled: boolean;\n}\n\ninterface DispatchProps {\n  setDarkMode: typeof setDarkMode\n}\n\ninterface MenuProps extends RouteComponentProps, StateProps, DispatchProps { }\n\nconst Menu: React.FC<MenuProps> = ({ darkMode, history, isAuthenticated, setDarkMode, menuEnabled }) => {\n  const location = useLocation();\n\n  function renderlistItems(list: Pages[]) {\n    return list\n      .filter(route => !!route.path)\n      .map(p => (\n        <IonMenuToggle key={p.title} auto-hide=\"false\">\n          <IonItem detail={false} routerLink={p.path} routerDirection=\"none\" className={location.pathname.startsWith(p.path) ? 'selected' : undefined}>\n            <IonIcon slot=\"start\" icon={p.icon} />\n            <IonLabel>{p.title}</IonLabel>\n          </IonItem>\n        </IonMenuToggle>\n      ));\n  }\n\n  return (\n    <IonMenu  type=\"overlay\" disabled={!menuEnabled} contentId=\"main\">\n      <IonContent forceOverscroll={false}>\n        <IonList lines=\"none\">\n          <IonListHeader>Conference</IonListHeader>\n          {renderlistItems(routes.appPages)}\n        </IonList>\n        <IonList lines=\"none\">\n          <IonListHeader>Account</IonListHeader>\n          {isAuthenticated ? renderlistItems(routes.loggedInPages) : renderlistItems(routes.loggedOutPages)}\n          <IonItem>\n            <IonIcon slot=\"start\" icon={moonOutline}></IonIcon>\n            <IonLabel>Dark Mode</IonLabel>\n            <IonToggle checked={darkMode} onClick={() => setDarkMode(!darkMode)} />\n          </IonItem>\n        </IonList>\n        <IonList lines=\"none\">\n          <IonListHeader>Tutorial</IonListHeader>\n          <IonItem button onClick={() => {\n            history.push('/tutorial');\n          }}>\n            <IonIcon slot=\"start\" icon={hammer} />\n            Show Tutorial\n          </IonItem>\n        </IonList>\n      </IonContent>\n    </IonMenu>\n  );\n};\n\nexport default connect<{}, StateProps, {}>({\n  mapStateToProps: (state) => ({\n    darkMode: state.user.darkMode,\n    isAuthenticated: state.user.isLoggedin,\n    menuEnabled: state.data.menuEnabled\n  }),\n  mapDispatchToProps: ({\n    setDarkMode\n  }),\n  component: withRouter(Menu)\n})\n"]},"metadata":{},"sourceType":"module"}