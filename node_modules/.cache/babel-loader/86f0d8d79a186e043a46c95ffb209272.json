{"ast":null,"code":"//const { Storage } = Plugins;\nconst dataUrl = '/assets/data/data.json'; //const [data type AppState, setData] = useState(false);\n\nconsole.log(\"début\");\nexport const getAppData = async () => {\n  console.log(\"debut lecture du fichier data.json\");\n  const response = await Promise.all([fetch(dataUrl)]);\n  console.log(response);\n  console.log(\"fin lecture du fichier data.json\");\n  console.log(\"debut fetch data.json\");\n  const responseData = await response[0].json();\n  console.log(\"fin fetch data.json\");\n  console.log(responseData);\n  console.log(\"debut fetch event structure\");\n  const events = responseData.Event;\n  console.log(\"fin fetch event structure\");\n  const data = {\n    events\n  };\n  console.log(data);\n  console.log(\"fin reading data\");\n  return data;\n};\nexport const loadAppData = async () => {\n  console.log(\"debut loading data\");\n  const data = await getAppData();\n  console.log(data);\n  console.log(\"fin loading data\");\n};\nexport const setLoading = isLoading => ({\n  type: 'set-app-loading',\n  isLoading\n});\nexport const setData = data => ({\n  type: 'set-app-data',\n  data\n});","map":{"version":3,"sources":["/Users/rtchudjo/ifcmv8/src/data/dataApi.ts"],"names":["dataUrl","console","log","getAppData","response","Promise","all","fetch","responseData","json","events","Event","data","loadAppData","setLoading","isLoading","type","setData"],"mappings":"AAOA;AAGA,MAAMA,OAAO,GAAG,wBAAhB,C,CAEA;;AACAC,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAY;AAEpCF,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AAEA,QAAME,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,CACjCC,KAAK,CAACP,OAAD,CAD4B,CAAZ,CAAvB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AAEAH,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AAGAD,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAMM,YAAY,GAAG,MAAMJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,IAAZ,EAA3B;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEAD,EAAAA,OAAO,CAACC,GAAR,CAAYM,YAAZ;AAGAP,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,QAAMQ,MAAM,GAAGF,YAAY,CAACG,KAA5B;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEA,QAAMU,IAAI,GAAG;AACXF,IAAAA;AADW,GAAb;AAIAT,EAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AAEAX,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,SAAOU,IAAP;AACD,CAhCM;AAmCP,OAAO,MAAMC,WAAW,GAAG,YAAY;AAErCZ,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,QAAMU,IAAI,GAAG,MAAMT,UAAU,EAA7B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAGD,CATM;AAWP,OAAO,MAAMY,UAAU,GAAIC,SAAD,KAAyB;AACjDC,EAAAA,IAAI,EAAE,iBAD2C;AAEjDD,EAAAA;AAFiD,CAAzB,CAAnB;AAKP,OAAO,MAAME,OAAO,GAAIL,IAAD,KAAkC;AACvDI,EAAAA,IAAI,EAAE,cADiD;AAEvDJ,EAAAA;AAFuD,CAAlC,CAAhB","sourcesContent":["import { Plugins } from '@capacitor/core';\nimport { useState } from 'react';\n\nimport { ActionType } from '../data/types'; \nimport { AppIfcmState, Event, Shopping,ShoppingItem, Teaching, TeachingLesson } from './models';\n\n\n//const { Storage } = Plugins;\n\n\nconst dataUrl = '/assets/data/data.json';\n\n//const [data type AppState, setData] = useState(false);\nconsole.log(\"début\");\n\nexport const getAppData = async () => {\n\n  console.log(\"debut lecture du fichier data.json\");\n\n  const response = await Promise.all([\n    fetch(dataUrl)]);\n\n  console.log(response);\n\n  console.log(\"fin lecture du fichier data.json\");\n\n\n  console.log(\"debut fetch data.json\");\n  const responseData = await response[0].json();\n  console.log(\"fin fetch data.json\");\n\n  console.log(responseData);\n\n\n  console.log(\"debut fetch event structure\");\n  const events = responseData.Event as Event[];\n  console.log(\"fin fetch event structure\");\n\n  const data = {\n    events\n  }\n\n  console.log(data);\n\n  console.log(\"fin reading data\");\n\n  return data;\n}\n\n\nexport const loadAppData = async () => {\n\n  console.log(\"debut loading data\");\n\n  const data = await getAppData();\n  console.log(data);\n  console.log(\"fin loading data\");\n\n\n}\n\nexport const setLoading = (isLoading: boolean) => ({\n  type: 'set-app-loading',\n  isLoading\n} as const);\n\nexport const setData = (data: Partial<AppIfcmState>) => ({\n  type: 'set-app-data',\n  data\n} as const);\n\nexport type SessionsActions =\n  | ActionType<typeof setLoading>\n  | ActionType<typeof setData>\n"]},"metadata":{},"sourceType":"module"}