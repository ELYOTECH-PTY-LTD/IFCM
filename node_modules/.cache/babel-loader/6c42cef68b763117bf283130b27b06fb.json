{"ast":null,"code":"import { Plugins } from '@capacitor/core';\nconst {\n  Storage\n} = Plugins;\nconst dataUrl = '/assets/data/data.json';\nconst HAS_LOGGED_IN = 'hasLoggedIn';\nconst HAS_SEEN_TUTORIAL = 'hasSeenTutorial';\nconst USERNAME = 'username'; //const [data type AppState, setData] = useState(false);\n\nconsole.log(\"début\");\nexport const getAppData = async () => {\n  console.log(\"debut lecture du fichier data.json\");\n  const response = await Promise.all([fetch(dataUrl)]);\n  console.log(response);\n  console.log(\"fin lecture du fichier data.json\");\n  console.log(\"debut fetch data.json\");\n  const responseData = await response[0].json();\n  console.log(\"fin fetch data.json\");\n  console.log(responseData);\n  console.log(\"debut fetch event structure\");\n  const events = responseData.Event;\n  const teachings = responseData.Teaching;\n  const shopping = responseData.Shopping;\n  console.log(\"fin fetch event structure\");\n  const data = {\n    events,\n    teachings,\n    shopping\n  };\n  console.log(data);\n  console.log(\"fin reading data\");\n  return data;\n};\nexport const loadAppData = () => async dispatch => {\n  console.log(\"debut loading data\");\n  dispatch(setLoading(true));\n  const data = await getAppData();\n  console.log(\"fin loading data\");\n  console.log(\"local storage data - setdata\");\n  dispatch(setData(data));\n  dispatch(setLoading(false));\n  console.log(\"fin set data\");\n};\nexport const setLoading = isLoading => ({\n  type: 'set-app-loading',\n  isLoading\n});\nexport const setData = data => ({\n  type: 'set-app-data',\n  data\n});\nexport const getUserData = async () => {\n  const response = await Promise.all([Storage.get({\n    key: HAS_LOGGED_IN\n  }), Storage.get({\n    key: HAS_SEEN_TUTORIAL\n  }), Storage.get({\n    key: USERNAME\n  })]);\n  const isLoggedin = (await response[0].value) === 'true';\n  const hasSeenTutorial = (await response[1].value) === 'true';\n  const username = (await response[2].value) || undefined;\n  const data = {\n    isLoggedin,\n    hasSeenTutorial,\n    username\n  };\n  return data;\n};\nexport const setIsLoggedInData = async isLoggedIn => {\n  await Storage.set({\n    key: HAS_LOGGED_IN,\n    value: JSON.stringify(isLoggedIn)\n  });\n};\nexport const setUsernameData = async username => {\n  if (!username) {\n    await Storage.remove({\n      key: USERNAME\n    });\n  } else {\n    await Storage.set({\n      key: USERNAME,\n      value: username\n    });\n  }\n};\nexport const setHasSeenTutorialData = async hasSeenTutorial => {\n  await Storage.set({\n    key: HAS_SEEN_TUTORIAL,\n    value: JSON.stringify(hasSeenTutorial)\n  });\n};","map":{"version":3,"sources":["/Users/rtchudjo/ifcmv8/src/data/dataApi.ts"],"names":["Plugins","Storage","dataUrl","HAS_LOGGED_IN","HAS_SEEN_TUTORIAL","USERNAME","console","log","getAppData","response","Promise","all","fetch","responseData","json","events","Event","teachings","Teaching","shopping","Shopping","data","loadAppData","dispatch","setLoading","setData","isLoading","type","getUserData","get","key","isLoggedin","value","hasSeenTutorial","username","undefined","setIsLoggedInData","isLoggedIn","set","JSON","stringify","setUsernameData","remove","setHasSeenTutorialData"],"mappings":"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","sourcesContent":["import { Plugins } from '@capacitor/core';\nimport { useState } from 'react';\n\nimport { ActionType } from './types'; \nimport { AppIfcmState, Event, Shopping,ShoppingItem, Teaching, TeachingLesson } from './models';\n\n\nconst { Storage } = Plugins;\n\n\nconst dataUrl = '/assets/data/data.json';\n\nconst HAS_LOGGED_IN = 'hasLoggedIn';\nconst HAS_SEEN_TUTORIAL = 'hasSeenTutorial';\nconst USERNAME = 'username';\n\n//const [data type AppState, setData] = useState(false);\nconsole.log(\"début\");\n\nexport const getAppData = async () => {\n\n  console.log(\"debut lecture du fichier data.json\");\n\n  const response = await Promise.all([\n    fetch(dataUrl)]);\n\n  console.log(response);\n\n  console.log(\"fin lecture du fichier data.json\");\n\n\n  console.log(\"debut fetch data.json\");\n  const responseData = await response[0].json();\n  console.log(\"fin fetch data.json\");\n\n  console.log(responseData);\n\n\n  console.log(\"debut fetch event structure\");\n  const events = responseData.Event as Event[];\n  const teachings = responseData.Teaching as Teaching [];\n  const shopping = responseData.Shopping as Shopping [];\n  console.log(\"fin fetch event structure\");\n\n  const data = {\n    events,\n    teachings,\n    shopping\n  }\n\n  console.log(data);\n\n  console.log(\"fin reading data\");\n\n  return data;\n}\n\n\n\n  export const loadAppData = () => async (dispatch: React.Dispatch<any>) => {\n\n    console.log(\"debut loading data\");\n    dispatch(setLoading(true));\n    const data = await getAppData();\n    console.log(\"fin loading data\");\n    \n    console.log(\"local storage data - setdata\");\n    dispatch(setData(data));\n    dispatch(setLoading(false));\n    console.log(\"fin set data\");\n\n  }\n\nexport const setLoading = (isLoading: boolean) => ({\n  type: 'set-app-loading',\n  isLoading\n} as const);\n\nexport const setData = (data: Partial<AppIfcmState>) => ({\n  type: 'set-app-data',\n  data\n} as const);\n\nexport type SessionsActions =\n  | ActionType<typeof setLoading>\n  | ActionType<typeof setData>\n\n\n  export const getUserData = async () => {\n    const response = await Promise.all([\n      Storage.get({ key: HAS_LOGGED_IN }),\n      Storage.get({ key: HAS_SEEN_TUTORIAL }),\n      Storage.get({ key: USERNAME })]);\n    const isLoggedin = await response[0].value === 'true';\n    const hasSeenTutorial = await response[1].value === 'true';\n    const username = await response[2].value || undefined;\n    const data = {\n      isLoggedin,\n      hasSeenTutorial,\n      username\n    }\n    return data;\n  }\n  \n  export const setIsLoggedInData = async (isLoggedIn: boolean) => {\n    await Storage.set({ key: HAS_LOGGED_IN, value: JSON.stringify(isLoggedIn) });\n  }\n\n  export const setUsernameData = async (username?: string) => {\n    if (!username) {\n      await Storage.remove({ key: USERNAME });\n    } else {\n      await Storage.set({ key: USERNAME, value: username });\n    }\n  }\n\n  export const setHasSeenTutorialData = async (hasSeenTutorial: boolean) => {\n    await Storage.set({ key: HAS_SEEN_TUTORIAL, value: JSON.stringify(hasSeenTutorial) });\n  }"]},"metadata":{},"sourceType":"module"}