{"ast":null,"code":"import { getUserData, setIsLoggedInData, setUsernameData, setHasSeenTutorialData } from './dataApi';\n;\nexport function userReducer(state, action) {\n  switch (action.type) {\n    case 'set-user-loading':\n      return { ...state,\n        loading: action.isLoading\n      };\n\n    case 'set-user-data':\n      return { ...state,\n        ...action.data\n      };\n\n    case 'set-username':\n      return { ...state,\n        username: action.username\n      };\n\n    case 'set-has-seen-tutorial':\n      return { ...state,\n        hasSeenTutorial: action.hasSeenTutorial\n      };\n\n    case 'set-is-loggedin':\n      return { ...state,\n        isLoggedin: action.loggedIn\n      };\n  }\n}\nexport const loadUserData = () => async dispatch => {\n  dispatch(setLoading(true));\n  const data = await getUserData();\n  dispatch(setData(data));\n  dispatch(setLoading(false));\n};\nexport const setLoading = isLoading => ({\n  type: 'set-user-loading',\n  isLoading\n});\nexport const setData = data => ({\n  type: 'set-user-data',\n  data\n});\nexport const logoutUser = () => async dispatch => {\n  await setIsLoggedInData(false);\n  dispatch(setUsername());\n};\nexport const setIsLoggedIn = loggedIn => async dispatch => {\n  await setIsLoggedInData(loggedIn);\n  return {\n    type: 'set-is-loggedin',\n    loggedIn\n  };\n};\nexport const setUsername = username => async dispatch => {\n  await setUsernameData(username);\n  return {\n    type: 'set-username',\n    username\n  };\n};\nexport const setHasSeenTutorial = hasSeenTutorial => async dispatch => {\n  await setHasSeenTutorialData(hasSeenTutorial);\n  return {\n    type: 'set-has-seen-tutorial',\n    hasSeenTutorial\n  };\n};","map":{"version":3,"sources":["C:/Users/etudiant/Documents/GitHub/IFCMV9/src/data/user.ts"],"names":["getUserData","setIsLoggedInData","setUsernameData","setHasSeenTutorialData","userReducer","state","action","type","loading","isLoading","data","username","hasSeenTutorial","isLoggedin","loggedIn","loadUserData","dispatch","setLoading","setData","logoutUser","setUsername","setIsLoggedIn","setHasSeenTutorial"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,iBAAtB,EAAyCC,eAAzC,EAA0DC,sBAA1D,QAAwF,WAAxF;AAUC;AAED,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAAuCC,MAAvC,EAAuE;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,OAAO,EAAEF,MAAM,CAACG;AAA5B,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAY,WAAGC,MAAM,CAACI;AAAtB,OAAP;;AACF,SAAK,cAAL;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYM,QAAAA,QAAQ,EAAEL,MAAM,CAACK;AAA7B,OAAP;;AACF,SAAK,uBAAL;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYO,QAAAA,eAAe,EAAEN,MAAM,CAACM;AAApC,OAAP;;AACF,SAAK,iBAAL;AACE,aAAO,EAAE,GAAGP,KAAL;AAAYQ,QAAAA,UAAU,EAAEP,MAAM,CAACQ;AAA/B,OAAP;AAVJ;AAYD;AAGD,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAyC;AACzEA,EAAAA,QAAQ,CAACC,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,QAAMP,IAAI,GAAG,MAAMV,WAAW,EAA9B;AACAgB,EAAAA,QAAQ,CAACE,OAAO,CAACR,IAAD,CAAR,CAAR;AACAM,EAAAA,QAAQ,CAACC,UAAU,CAAC,KAAD,CAAX,CAAR;AACD,CALM;AAOP,OAAO,MAAMA,UAAU,GAAIR,SAAD,KAAyB;AACjDF,EAAAA,IAAI,EAAE,kBAD2C;AAEjDE,EAAAA;AAFiD,CAAzB,CAAnB;AAKP,OAAO,MAAMS,OAAO,GAAIR,IAAD,KAA+B;AACpDH,EAAAA,IAAI,EAAE,eAD8C;AAEpDG,EAAAA;AAFoD,CAA/B,CAAhB;AAKP,OAAO,MAAMS,UAAU,GAAG,MAAM,MAAOH,QAAP,IAAyC;AACvE,QAAMf,iBAAiB,CAAC,KAAD,CAAvB;AACAe,EAAAA,QAAQ,CAACI,WAAW,EAAZ,CAAR;AACD,CAHM;AAKP,OAAO,MAAMC,aAAa,GAAIP,QAAD,IAAuB,MAAOE,QAAP,IAAyC;AAC3F,QAAMf,iBAAiB,CAACa,QAAD,CAAvB;AACA,SAAQ;AACNP,IAAAA,IAAI,EAAE,iBADA;AAENO,IAAAA;AAFM,GAAR;AAID,CANM;AAQP,OAAO,MAAMM,WAAW,GAAIT,QAAD,IAAuB,MAAOK,QAAP,IAAyC;AACzF,QAAMd,eAAe,CAACS,QAAD,CAArB;AACA,SAAQ;AACNJ,IAAAA,IAAI,EAAE,cADA;AAENI,IAAAA;AAFM,GAAR;AAID,CANM;AAQP,OAAO,MAAMW,kBAAkB,GAAIV,eAAD,IAA8B,MAAOI,QAAP,IAAyC;AACvG,QAAMb,sBAAsB,CAACS,eAAD,CAA5B;AACA,SAAQ;AACNL,IAAAA,IAAI,EAAE,uBADA;AAENK,IAAAA;AAFM,GAAR;AAID,CANM","sourcesContent":["import { getUserData, setIsLoggedInData, setUsernameData, setHasSeenTutorialData } from './dataApi';\nimport { ActionType } from './types';\n\n\n\nexport interface UserState {\n  isLoggedin: boolean;\n  username?: string;\n  hasSeenTutorial: boolean;\n  loading: boolean;\n};\n\nexport function userReducer(state: UserState, action: UserActions): UserState {\n  switch (action.type) {\n    case 'set-user-loading':\n      return { ...state, loading: action.isLoading };\n    case 'set-user-data':\n      return { ...state, ...action.data };\n    case 'set-username':\n      return { ...state, username: action.username };\n    case 'set-has-seen-tutorial':\n      return { ...state, hasSeenTutorial: action.hasSeenTutorial };\n    case 'set-is-loggedin':\n      return { ...state, isLoggedin: action.loggedIn };\n  }\n}\n\n\nexport const loadUserData = () => async (dispatch: React.Dispatch<any>) => {\n  dispatch(setLoading(true));\n  const data = await getUserData();\n  dispatch(setData(data));\n  dispatch(setLoading(false));\n}\n\nexport const setLoading = (isLoading: boolean) => ({\n  type: 'set-user-loading',\n  isLoading\n} as const);\n\nexport const setData = (data: Partial<UserState>) => ({\n  type: 'set-user-data',\n  data\n} as const);\n\nexport const logoutUser = () => async (dispatch: React.Dispatch<any>) => {\n  await setIsLoggedInData(false);\n  dispatch(setUsername());\n};\n\nexport const setIsLoggedIn = (loggedIn: boolean) => async (dispatch: React.Dispatch<any>) => {\n  await setIsLoggedInData(loggedIn);\n  return ({\n    type: 'set-is-loggedin',\n    loggedIn\n  } as const)\n};\n\nexport const setUsername = (username?: string) => async (dispatch: React.Dispatch<any>) => {\n  await setUsernameData(username);\n  return ({\n    type: 'set-username',\n    username\n  } as const);\n};\n\nexport const setHasSeenTutorial = (hasSeenTutorial: boolean) => async (dispatch: React.Dispatch<any>) => {\n  await setHasSeenTutorialData(hasSeenTutorial);\n  return ({\n    type: 'set-has-seen-tutorial',\n    hasSeenTutorial\n  } as const);\n} \n\n\nexport type UserActions =\n  | ActionType<typeof setLoading>\n  | ActionType<typeof setData>\n  | ActionType<typeof setIsLoggedIn>\n  | ActionType<typeof setUsername>\n  | ActionType<typeof setHasSeenTutorial>\n"]},"metadata":{},"sourceType":"module"}