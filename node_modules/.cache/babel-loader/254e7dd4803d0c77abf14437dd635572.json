{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guigu\\\\Documents\\\\ifcm\\\\IFCM2\\\\IFCM\\\\src\\\\pages\\\\Login.tsx\";\nimport React from 'react';\nimport './Login.scss';\nimport { withRouter } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SomeComponent = ({\n  history\n}) => {\n  const goHome = () => history.push('/home');\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: goHome,\n    children: \"Go Home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n\n_c = SomeComponent;\nexport default _c2 = withRouter(SomeComponent);\n/*\r\nfunction Login() {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [formSubmitted, setFormSubmitted] = useState(false);\r\n    const [usernameError, setUsernameError] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n  \r\n    const login = async (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n      setFormSubmitted(true);\r\n      if(!username) {\r\n        setUsernameError(true);\r\n      }\r\n      if(!password) {\r\n        setPasswordError(true);\r\n      }\r\n  \r\n    return (\r\n        <IonPage id=\"login-page\">\r\n        <IonHeader>\r\n          <IonToolbar>\r\n            <IonButtons slot=\"start\">   \r\n            </IonButtons>\r\n            <IonTitle>Login to IFCM</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n        <IonContent>\r\n  \r\n          <div className=\"login-logo\">\r\n            <img src=\"assets/img/ifcm_logo.png\" alt=\"ifcm Logo\" />\r\n          </div>\r\n  \r\n          <form noValidate onSubmit={login}>\r\n            <IonList>\r\n              <IonButton expand=\"block\" color=\"facebook\" className=\"margin\"> <IonIcon name=\"logo-facebook\" className=\"margin-logo\"></IonIcon> Facebook Connect</IonButton>\r\n              <IonButton expand=\"block\" color=\"instagram\" className=\"margin\"><IonIcon name=\"logo-instagram\" className=\"margin-logo\"></IonIcon> Instagram Connect</IonButton>\r\n              <IonButton expand=\"block\" color=\"twitter\" className=\"margin\"> <IonIcon name=\"logo-twitter\" className=\"margin-logo\"></IonIcon> Twitter Connect</IonButton>\r\n              \r\n              <IonText className=\"ion-text-center\"> <p className=\"gray\" > OR</p></IonText>\r\n              \r\n              <IonItem>\r\n                <IonLabel position=\"stacked\" color=\"primary\">Email</IonLabel>\r\n                <IonInput name=\"username\" type=\"text\" value={username} spellCheck={false} autocapitalize=\"off\" onIonChange={e => setUsername(e.detail.value!)}\r\n                  required>\r\n                </IonInput>\r\n              </IonItem>\r\n  \r\n              {formSubmitted && usernameError && <IonText color=\"danger\">\r\n                <p className=\"ion-padding-start\">\r\n                  Username is required\r\n                </p>\r\n              </IonText>}\r\n  \r\n              <IonItem>\r\n                <IonLabel position=\"stacked\" color=\"primary\">Password</IonLabel>\r\n                <IonInput name=\"password\" type=\"password\" value={password} onIonChange={e => setPassword(e.detail.value!)}>\r\n                </IonInput>\r\n              </IonItem>\r\n  \r\n              {formSubmitted && passwordError && <IonText color=\"danger\">\r\n                <p className=\"ion-padding-start\">\r\n                  Password is required\r\n                </p>\r\n              </IonText>}\r\n            </IonList>\r\n  \r\n            <IonRow>\r\n              <IonCol>\r\n                <IonButton type=\"submit\" expand=\"block\">Login</IonButton>\r\n              </IonCol>\r\n            </IonRow>\r\n          </form>\r\n          <IonText className=\"ion-text-center\">\r\n            <IonRouterLink href=\"/forgot\" class=\"forgot\">Forgot Password ?</IonRouterLink>\r\n            <p>Don't have an account ? <IonRouterLink href=\"/signup\">Sign up</IonRouterLink></p>\r\n          </IonText>\r\n\r\n        </IonContent>\r\n  \r\n      </IonPage>\r\n    );\r\n  };\r\n}\r\nexport default Login;\r\n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SomeComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/guigu/Documents/ifcm/IFCM2/IFCM/src/pages/Login.tsx"],"names":["React","withRouter","SomeComponent","history","goHome","push"],"mappings":";AACA,OAAOA,KAAP,MAAgC,OAAhC;AAEA,OAAO,cAAP;AACA,SAA8BC,UAA9B,QAAgD,cAAhD;;;AAGA,MAAMC,aAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACnE,QAAMC,MAAM,GAAG,MAAMD,OAAO,CAACE,IAAR,CAAa,OAAb,CAArB;;AACA,sBAAO;AAAQ,IAAA,OAAO,EAAED,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;KAAMF,a;AAIN,qBAAeD,UAAU,CAACC,aAAD,CAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["  \r\nimport React, { useState } from 'react';\r\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonPage, IonButtons, IonRow, IonCol, IonButton, IonList, IonItem, IonLabel, IonInput, IonText, IonRouterLink, IonIcon } from '@ionic/react';\r\nimport './Login.scss';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\n\r\ntype SomeComponentProps = RouteComponentProps;\r\nconst SomeComponent: React.FC<SomeComponentProps> = ({ history }) => {\r\n  const goHome = () => history.push('/home');\r\n  return <button onClick={goHome}>Go Home</button>;\r\n};\r\nexport default withRouter(SomeComponent);\r\n/*\r\nfunction Login() {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [formSubmitted, setFormSubmitted] = useState(false);\r\n    const [usernameError, setUsernameError] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n  \r\n    const login = async (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n      setFormSubmitted(true);\r\n      if(!username) {\r\n        setUsernameError(true);\r\n      }\r\n      if(!password) {\r\n        setPasswordError(true);\r\n      }\r\n  \r\n    return (\r\n        <IonPage id=\"login-page\">\r\n        <IonHeader>\r\n          <IonToolbar>\r\n            <IonButtons slot=\"start\">   \r\n            </IonButtons>\r\n            <IonTitle>Login to IFCM</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n        <IonContent>\r\n  \r\n          <div className=\"login-logo\">\r\n            <img src=\"assets/img/ifcm_logo.png\" alt=\"ifcm Logo\" />\r\n          </div>\r\n  \r\n          <form noValidate onSubmit={login}>\r\n            <IonList>\r\n              <IonButton expand=\"block\" color=\"facebook\" className=\"margin\"> <IonIcon name=\"logo-facebook\" className=\"margin-logo\"></IonIcon> Facebook Connect</IonButton>\r\n              <IonButton expand=\"block\" color=\"instagram\" className=\"margin\"><IonIcon name=\"logo-instagram\" className=\"margin-logo\"></IonIcon> Instagram Connect</IonButton>\r\n              <IonButton expand=\"block\" color=\"twitter\" className=\"margin\"> <IonIcon name=\"logo-twitter\" className=\"margin-logo\"></IonIcon> Twitter Connect</IonButton>\r\n              \r\n              <IonText className=\"ion-text-center\"> <p className=\"gray\" > OR</p></IonText>\r\n              \r\n              <IonItem>\r\n                <IonLabel position=\"stacked\" color=\"primary\">Email</IonLabel>\r\n                <IonInput name=\"username\" type=\"text\" value={username} spellCheck={false} autocapitalize=\"off\" onIonChange={e => setUsername(e.detail.value!)}\r\n                  required>\r\n                </IonInput>\r\n              </IonItem>\r\n  \r\n              {formSubmitted && usernameError && <IonText color=\"danger\">\r\n                <p className=\"ion-padding-start\">\r\n                  Username is required\r\n                </p>\r\n              </IonText>}\r\n  \r\n              <IonItem>\r\n                <IonLabel position=\"stacked\" color=\"primary\">Password</IonLabel>\r\n                <IonInput name=\"password\" type=\"password\" value={password} onIonChange={e => setPassword(e.detail.value!)}>\r\n                </IonInput>\r\n              </IonItem>\r\n  \r\n              {formSubmitted && passwordError && <IonText color=\"danger\">\r\n                <p className=\"ion-padding-start\">\r\n                  Password is required\r\n                </p>\r\n              </IonText>}\r\n            </IonList>\r\n  \r\n            <IonRow>\r\n              <IonCol>\r\n                <IonButton type=\"submit\" expand=\"block\">Login</IonButton>\r\n              </IonCol>\r\n            </IonRow>\r\n          </form>\r\n          <IonText className=\"ion-text-center\">\r\n            <IonRouterLink href=\"/forgot\" class=\"forgot\">Forgot Password ?</IonRouterLink>\r\n            <p>Don't have an account ? <IonRouterLink href=\"/signup\">Sign up</IonRouterLink></p>\r\n          </IonText>\r\n\r\n        </IonContent>\r\n  \r\n      </IonPage>\r\n    );\r\n  };\r\n}\r\nexport default Login;\r\n*/"]},"metadata":{},"sourceType":"module"}